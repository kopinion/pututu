{"per_page":10,"total":4,"current":3,"data":[{"title":"Linux emacs clangd 配置","date":"2019-10-08T11:09:20.000Z","date_formatted":{"ll":"2019年10月8日","L":"2019/10/08","MM-DD":"10-08"},"excerpt":"笔者的因为工作的原因需要使用 centos 工作， 并且工作的主要语言是 c/c++, 但是笔者比较习惯的 IDE 是 Intellij 或者 emacs。 所以笔者需要在 centos 上配置相应的 emacs 环境。但是在 centos 上使用 yum 安装 emacs 下只能安装 emacs 24.2, 所以笔者需要配置 emacs ,并且配置 emacs c++ 的环境。","link":"2019/10/08/emacs-clangd-config","tags":["emacs"],"categories":["emacs"]},{"title":"RPM 安装包制作","date":"2019-09-12T11:18:20.000Z","date_formatted":{"ll":"2019年9月12日","L":"2019/09/12","MM-DD":"09-12"},"excerpt":"rpm 包是预先在Linux主机上编译好并打包的文件，可以在离线的情况下进行安装。这边文件总结了笔者的 rpm 包的构建过程以及构建过程中遇到的各种问题，希望能帮助到各位。","link":"2019/09/12/rpm-package-with-rpmbuild","tags":["linux package devops"],"categories":["devops","linux","package"]},{"title":"OpenGL 基本概念","date":"2019-08-31T12:40:20.000Z","date_formatted":{"ll":"2019年8月31日","L":"2019/08/31","MM-DD":"08-31"},"excerpt":"很多时候我们听到或者看到 OpenGL 是 client server 模型，往往都是在说 OpenGL 的执行模型是 client-server 模型。这里的 client 一般是指用户写的应用程序，应用程序调用了 OpenGL 的相关接口。这里的 server 端一般指 OpenGL 的具体实现，这个实现可能是纯软件实现 OpenGL 规范，或者是软件＋GPU实现 OpenGL。这里的 client 会通过 OpenGL 提供的 API 向 OpenGL 发送相应的指令，Server 端处理指令。","link":"2019/08/31/opengl-spec","tags":["graphics","opengl"],"categories":["graphics","opengl"]},{"title":"Emacs 奇淫巧计","date":"2019-06-30T12:40:20.000Z","date_formatted":{"ll":"2019年6月30日","L":"2019/06/30","MM-DD":"06-30"},"excerpt":"emacs 各种常见的使用技巧","link":"2019/06/30/emacs","tags":["emacs","productivity"],"categories":["productivity"]},{"title":"如何使用Java Jersey MyBatis 编写微服务 REST API","date":"2014-10-10T12:22:50.000Z","date_formatted":{"ll":"2014年10月10日","L":"2014/10/10","MM-DD":"10-10"},"excerpt":"jersey 和 mybatis 做为 java 界的扛把子，我们应该如何一步一步的通过测试驱动开发的方式来完成一个API的实现过程。这篇文章会给以一个详细的介绍","link":"2014/10/10/jersey-mybatis-rest-api","tags":["java","mybatis","rest api"],"categories":["java","mybatis","rest api"]},{"title":"初尝ruby on rails","date":"2014-08-20T14:44:20.000Z","date_formatted":{"ll":"2014年8月20日","L":"2014/08/20","MM-DD":"08-20"},"excerpt":"Ruby on Rails（官方简称为Rails，亦被简称为RoR），是一个使用Ruby语言写的开源Web应用框架，它是严格按照MVC结构开发的。它努力使自身保持简单，来使实际的应用开发时的代码更少，使用最少的配置。","link":"2014/08/20/ror-first","tags":["framework","language"],"categories":["framework","language"]},{"title":"当金数据遇到NGO","date":"2014-08-04T22:55:20.000Z","date_formatted":{"ll":"2014年8月4日","L":"2014/08/04","MM-DD":"08-04"},"excerpt":"对于传统的NGO，他们的业务大致包含以下几类：1. 做常规的调查 2. 志愿者的招聘 3. 活动参与统计 4. 活动反馈收集.在以上的活动中，都不可避免的需要做一些表单，及数据统计及分析方面的工作。传统方式下我们需要手动完成很多的事情。金数据为现在化NGO带来了很多的可能。","link":"2014/08/04/jinshuju-ngo","tags":["business"],"categories":["business"]},{"title":"为什么我们需要NoSQL -- mongodb","date":"2014-07-28T02:50:22.000Z","date_formatted":{"ll":"2014年7月28日","L":"2014/07/28","MM-DD":"07-28"},"excerpt":"关系型数据库可以保证我们操作可以在一个事务中完成，即便这些数据来自不同不同表中的不同的行。(Atomic Consistent Isolated Durable) No-SQL中没有事务来保证夸多个聚合根的一致性。只有事务用来保证单一聚合的Atomic的属性。也就是说如果我们需要夸聚合根的一致性的时候，我们需要在应用程序级别来保证。","link":"2014/07/28/why_mongodb","tags":["architecture","db"],"categories":["architecture","db"]},{"title":"Devops之Ansible 入门","date":"2014-07-25T08:17:59.000Z","date_formatted":{"ll":"2014年7月25日","L":"2014/07/25","MM-DD":"07-25"},"excerpt":"ansible是个什么东西呢？官方的title是“Ansible is Simple IT Automation”——简单的自动化IT工具。这个工具的目标有这么几项：自动化部署APP；自动化管理配置项；自动化的持续交互；自动化的（AWS）云服务管理。Ansible 的免安装特性，使得 ansible 在 devops 中获得了非常广泛的使用。","link":"2014/07/25/ansible-usage","tags":["devops"],"categories":["devops"]},{"title":"时间驱动建模","date":"2014-07-20T12:33:50.000Z","date_formatted":{"ll":"2014年7月20日","L":"2014/07/20","MM-DD":"07-20"},"excerpt":"对于时间驱动建模驱动力主要包括两块 1. 对于企业内部，驱动力大部分为KPI 2. 对于外部商业系统，驱动力为支出或者收入的钱","link":"2014/07/20/accounting-driven-modeling","tags":["architecture modeling"],"categories":["architecture","modeling"]}]}